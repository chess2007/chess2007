Алгоритм работы со стеком параметров

Исходный стек
                         -------------------
                         |<-----DEPTHi---->|
                         | Ni | parameters |
                         SP@i            ( S0 @ )i

Промежуточный стек
--------------------------------------------
                         |<-----DEPTHi---->|
           |<---Буфер стека-->|
|<-DEPTHo->|    15-Ni    | Ni | parameters |
SP@o     ( S0 @ )o       SP@i            ( S0 @ )i

Выходной стек
                   -------------------------

                   |<-DEPTHo->| parameters |
                   SP@                   ( S0 @ )i

Синтаксис стековых манипуляторов

\ Символы     Символы с префиксами " `       исполняемые токены, числа, адреса ячеек буфера стека, содержимое ячеек буфера стека  

a ABS         "a DABS         `a FABS        /`2[11*22*+`q] - пример задания манипулятора, символ '/' - начало манипулятора, след-щие 2 символа '`2' - означают, что Ni=2                       
b C@          "b W@           `b .BL         (в ячейках 1 и 2 буфера стека размещены верхние два параметра исходного стека - в самой верхней ячейке - параметр 2, глубже - пар-р 1)
                                             по '[' исходный стек преобразуется в промежуточный без заполнения (DEPTHo=0). 
c EMIT        "c COMPARE      `c FCOS        Затем из буфера на стек помещается содержимое 1 ячейки буфера и еще раз, производится их перемножение, результат остается на стеке,          
d DUP         "d 2DUP         `d FDUP        аналогичные действия производятся с содержимым 2 ячейки буфера, затем квадраты содержимого 1 и 2 ячеек складываются, а из суммы извлекается корень
e ELSE        "e              `e             Таким образом вычислили длину гипотенузы в прямоугольном треугольнике с катетами, с длинами, равными параметрам, взятыми со стека.      
f hFree       "f              `f      
g CELL        "g 4cell        `g             (*) буфер стека заводится фиксированного размера в 15 ячеек в стеке параметров,                              
h hAlloc      "h              `h hex         ячейки буфера именуются символами 1 2 3 4 5 6 7 8 9 A B C D E F (HEX) со старших адресов к младшим
i 1+          "i              `i 1-          '1..'9 'A..'F - адреса ячеек буфера и откуда они кладутся(копируются) на стек                       
j 1+!         "j              `j 1-!                                                                 
k KEY         "k              `k kbyte       1..9 A..F - содержимое ячеек буфера                                                              
l LSHIFT      "l DLSHIFT      `l            `1..`9 `A..`F - числа 1..9 A..F                                                                                                                                
m MIN         "m              `m FMIN        : - символ присвоения, верхнее значение снимается со стека и записывается в                      
n NEGATE      "n DNEGATE      `n FNEGATE     указанную за символом : ячейку, например 12+:D(содержимое ячеек 1 2 кладется на стек         
o AGAIN       "o              `o             суммируется на стеке и сумма снимается со стека и помещается в ячейку D буфера стека. 
                                             по символу ']' промежуточный стек преобразуется в выходной стек                                                                                                        
p DS>F        "p              `p FPI         'S  - XT слова обозначенного символом S
q F>DS        "q              `q sqrt   
r RSHIFT      "r DRSHIFT      `r  
s SEARCH      "s              `s FSIN   
t THEN        "t              `t n.0b   
u hResize     "u              `u  
v EVALUATE    "v              `v  
w C!          "w W!           `w  
x DROP        "x 2DROP        `x FDROP  
y odin        "y Dodin        `y  
z 0<>         "z D0<>         `z F0<    
A             "A              `A
B             "B              `B
C             "C              `C
D             "D              `D FLOAT>DATA
E             "E              `E 
F             "F              `F DATA>FLOAT             
G aDO         "G              `I F1+    
H WITHIN      "H              `T FTAN   
I I           "X              `P .0     
J J           "Z D0=          `M FMAX   
K EKEY        "+ D+           `Z F0=    
L LOOP        "- D-           `+ F+     
M MAX         "< D<           `- F-     
N +LOOP       "= D=           `* F*     
O BEGIN       "> D>           `/ F/     
P DEPTH       "@ 2@           `< F<     
Q LEAVE       "! 2!           `= F=     
R REPEAT      "^ DXOR         `@ F@   
S SPACES      "| DOR          `! F!   
T TYPE        "& DAND         `. F.    
U UNTIL       "~ DINVERT      `; RET,  
V MOVE        ", 2LITERAL     `K mbyte
W WHILE       ". D.           `Q FSQRT
X EXECUTE     "0 Dnull        `T n.0h 
Y TRUE   
Z 0=     
! !      
# FILL   
$ ?DO    
% MOD    
& AND    
( OF     
) ENDOF  
* *      
+ +      
, LITERAL
- -      
. .      
/ /      
; EXIT   
< <      
= =      
> >      
? IF     
@ @      
[ CASE   
\ CR     
] ENDCASE
^ XOR    
_ ACCEPT 
{ LAMBDA{
| OR     
} }LAMBDA
~ INVERT 

\ пример - сложение строк
\      1  2  3  4     5  6 
: s+ \ a1 u1 a2 u2 -- a3 u3 
4/24+d:6h:5152V352+4V56 ;

\ комментарии: запись 4/ означает, что со стека 4 верхних параметра a1 u1 a2 u2 записываюся соответственно в ячейки 1 2 3 4 буфера стека, 
\ размером 15 ячеек, который выделяется в хипе по полному заголовку манипулятора(то есть когда указано число параметров ячеек, или когда
\ имеем самую первую запись манипулятора в определении в виде /sss, где sss - символы манипулятора).     
\ итак 4/ - сбросили параметры 1(a1) 2(u1) 3(a2) 4(u2) со стека в ячейки 1 2 3 4 выделенного буфера, затем
\ содержимое 2 и 4 ячеек буфера положили на стек, сложили, результат сложения продублировали на стеке и сбросили в ячейку 6 буфера, затем 
\ сделали ALLOCATE THROW (h) и получили адрес массива размером, равном сумме длин исходных строк, который сбросили со стека в ячейку 5.
\ дальше пересылаем строку a1 u1 в этот выделенный массив, для чего выкладываем на стек адрес строки1 a1(1), адрес выделенного массива (5)
\ и длину пересылаемой строки1 u1(2), затем выполняем MOVE(V), аналогичные действия проводим для второй строки, а затем выкладываем на стек
\ адрес и длину суммарной строки(56).
\ второй вариант с использованием только пяти ячеек буфера : s+  4/24+:5152V352+4V524+ ; длина суммарной строки вычисляется как сумма исх. строк        































